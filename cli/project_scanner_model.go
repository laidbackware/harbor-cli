// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/laidbackware/harbor-cli/models"
	"github.com/spf13/cobra"
)

// Schema cli for ProjectScanner

// register flags to command
func registerModelProjectScannerFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerProjectScannerUUID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerProjectScannerUUID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	uuidDescription := `Required. The identifier of the scanner registration`

	var uuidFlagName string
	if cmdPrefix == "" {
		uuidFlagName = "uuid"
	} else {
		uuidFlagName = fmt.Sprintf("%v.uuid", cmdPrefix)
	}

	var uuidFlagDefault string

	_ = cmd.PersistentFlags().String(uuidFlagName, uuidFlagDefault, uuidDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelProjectScannerFlags(depth int, m *models.ProjectScanner, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, uuidAdded := retrieveProjectScannerUUIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || uuidAdded

	return nil, retAdded
}

func retrieveProjectScannerUUIDFlags(depth int, m *models.ProjectScanner, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	uuidFlagName := fmt.Sprintf("%v.uuid", cmdPrefix)
	if cmd.Flags().Changed(uuidFlagName) {

		var uuidFlagName string
		if cmdPrefix == "" {
			uuidFlagName = "uuid"
		} else {
			uuidFlagName = fmt.Sprintf("%v.uuid", cmdPrefix)
		}

		uuidFlagValue, err := cmd.Flags().GetString(uuidFlagName)
		if err != nil {
			return err, false
		}
		m.UUID = &uuidFlagValue

		retAdded = true
	}

	return nil, retAdded
}
