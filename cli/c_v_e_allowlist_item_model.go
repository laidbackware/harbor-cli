// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/laidbackware/harbor-cli/models"
	"github.com/spf13/cobra"
)

// Schema cli for CVEAllowlistItem

// register flags to command
func registerModelCVEAllowlistItemFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerCVEAllowlistItemCveID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerCVEAllowlistItemCveID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	cveIdDescription := `The ID of the CVE, such as 'CVE-2019-10164'`

	var cveIdFlagName string
	if cmdPrefix == "" {
		cveIdFlagName = "cve_id"
	} else {
		cveIdFlagName = fmt.Sprintf("%v.cve_id", cmdPrefix)
	}

	var cveIdFlagDefault string

	_ = cmd.PersistentFlags().String(cveIdFlagName, cveIdFlagDefault, cveIdDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelCVEAllowlistItemFlags(depth int, m *models.CVEAllowlistItem, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, cveIdAdded := retrieveCVEAllowlistItemCveIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || cveIdAdded

	return nil, retAdded
}

func retrieveCVEAllowlistItemCveIDFlags(depth int, m *models.CVEAllowlistItem, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	cveIdFlagName := fmt.Sprintf("%v.cve_id", cmdPrefix)
	if cmd.Flags().Changed(cveIdFlagName) {

		var cveIdFlagName string
		if cmdPrefix == "" {
			cveIdFlagName = "cve_id"
		} else {
			cveIdFlagName = fmt.Sprintf("%v.cve_id", cmdPrefix)
		}

		cveIdFlagValue, err := cmd.Flags().GetString(cveIdFlagName)
		if err != nil {
			return err, false
		}
		m.CveID = cveIdFlagValue

		retAdded = true
	}

	return nil, retAdded
}
